{{- define "deployments.cosmic-config-server" -}}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: cosmic-config-server
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: cosmic-config-server
      annotations:
        pod.beta.kubernetes.io/init-containers: |
          [{
            "name": "vault-health-checker",
            "image": "python:alpine",
            "command": ["/usr/local/bin/python"],
            "args": [
              "/scripts/readiness-probe.py",
{{- if eq .Values.global.vault.scheme "https" }}
              "--tls",
{{- end }}
              "--host", {{ .Values.global.vault.host | quote }},
              "--port", {{ .Values.global.vault.port | quote }},
              "--path", "/v1/sys/health"
            ],
            "imagePullPolicy": "IfNotPresent",
            "volumeMounts": [{
              "name": "init-container-scripts",
              "mountPath": "/scripts",
              "readOnly": true
            }]
          }]
    spec:
      containers:
      - name: cosmic-config-server
        image: {{ .Values.registry }}missioncriticalcloud/cosmic-config-server:{{ .Values.cosmic_config_server.image_tag }}
        imagePullPolicy: IfNotPresent
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
            httpHeaders:
            - name: X-Config-Token
              value: {{ .Values.global.vault.read_only_token }}
          initialDelaySeconds: 10
          timeoutSeconds: 5
          periodSeconds: 30
        env:
        - name: SPRING_APPLICATION_JSON
          valueFrom:
            secretKeyRef:
              name: cosmic-config-server
              key: config
        ports:
        - containerPort: 8080
      volumes:
      - name: init-container-scripts
        configMap:
          name: init-container-scripts
{{- end -}}
